/*
 * This file was generated by dbusxml2cpp version 0.6
 * Command line was: dbusxml2cpp -N -m -p nm-exported-connectioninterface /space/kde/sources/trunk/KDE/kdebase/workspace/solid/networkmanager-0.7/dbus/introspection/nm-exported-connection.xml
 *
 * dbusxml2cpp is Copyright (C) 2006 Trolltech ASA. All rights reserved.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef NM_EXPORTED_CONNECTIONINTERFACE_H_1205050593
#define NM_EXPORTED_CONNECTIONINTERFACE_H_1205050593

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>

/*HAND-EDIT*/
#include "generic-types.h"

/*
 * Proxy class for interface org.freedesktop.NetworkManagerSettings.Connection
 */
class OrgFreedesktopNetworkManagerSettingsConnectionInterface: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "org.freedesktop.NetworkManagerSettings.Connection"; }

public:
    OrgFreedesktopNetworkManagerSettingsConnectionInterface(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~OrgFreedesktopNetworkManagerSettingsConnectionInterface();

public Q_SLOTS: // METHODS
    inline QDBusReply<QString> GetID()
    {
        QList<QVariant> argumentList;
        return callWithArgumentList(QDBus::Block, QLatin1String("GetID"), argumentList);
    }

    inline QDBusReply<QVariantMapMap> GetSettings()
    {
        QList<QVariant> argumentList;
        return callWithArgumentList(QDBus::Block, QLatin1String("GetSettings"), argumentList);
    }

Q_SIGNALS: // SIGNALS
    void Removed();
    void Updated(const QVariantMapMap &settings);
};

/*
 * Proxy class for interface org.freedesktop.NetworkManagerSettings.Connection.Secrets
 */
class OrgFreedesktopNetworkManagerSettingsConnectionSecretsInterface: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "org.freedesktop.NetworkManagerSettings.Connection.Secrets"; }

public:
    OrgFreedesktopNetworkManagerSettingsConnectionSecretsInterface(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~OrgFreedesktopNetworkManagerSettingsConnectionSecretsInterface();

public Q_SLOTS: // METHODS
    inline QDBusReply<QVariantMap> GetSecrets(const QString &setting_name, const QStringList &hints, bool request_new)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(setting_name) << qVariantFromValue(hints) << qVariantFromValue(request_new);
        return callWithArgumentList(QDBus::Block, QLatin1String("GetSecrets"), argumentList);
    }

Q_SIGNALS: // SIGNALS
};

#endif
